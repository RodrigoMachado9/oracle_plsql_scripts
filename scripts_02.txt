/*
Criar um bloco PL-SQL para acessar um determinado fornecedor na tabela FORNECEDOR, 
cujo código do fornecedor deverá ser informado em tempo de execução. 
Apresente na tela o seu código, endereço e o valor de suas vendas.
*/
DECLARE
  v_cod_provider FORNECEDOR.N_FORNEC%TYPE;
  v_has_cod FORNECEDOR.N_FORNEC%TYPE;
  v_address FORNECEDOR.ENDERECO%TYPE;
  v_sales   FORNECEDOR.VENDA%TYPE;
BEGIN 
   v_cod_provider:='& TYPE_THE_COD_PROVIDER';
   SELECT N_FORNEC INTO v_has_cod FROM fornecedor WHERE N_FORNEC = v_cod_provider;
   IF v_has_cod = v_cod_provider THEN
        SELECT ENDERECO, VENDA INTO v_address, v_sales FROM fornecedor WHERE N_FORNEC = v_cod_provider;         
        SYS.DBMS_OUTPUT.PUT_LINE('The supplier,s address >>' || v_address );
        SYS.DBMS_OUTPUT.PUT_LINE('The value of sales >>' || v_sales );
    END IF;
EXCEPTION 
     WHEN NO_DATA_FOUND THEN
        SYS.DBMS_OUTPUT.PUT_LINE('invalid code');
     WHEN OTHERS THEN 
         SYS.DBMS_OUTPUT.PUT_LINE('invalid data type');
END;





/*
ACESSAR TABELA FORNECEDOR, CUJO CÓDIGO DEVERÁ SER INFORMADO NA TELA E ALTERAR O VALOR DA COMISSÃO, NAS CONDIÇÕES ABAIXO.
Criar um bloco PL-SQL para acessar, na tabela FORNECEDOR, o fornecedor informado na tela e executar as seguintes ações:
Caso não encontre dar a mensagem ‘ FORNECEDOR NÃO INFORMADO’

Caso encontre deverá fazer a seguinte atualização na comissão:

Se as vendas forem maiores que 6000  a comissão deverá ser 15% do valor das vendas
Caso contrário  a comissão deverá ser 5% do valor das vendas

No final, dar uma mensagem do valor calculado da comissão.

*/

DECLARE 
  v_cod_provider FORNECEDOR.N_FORNEC%TYPE;
  v_has_cod FORNECEDOR.N_FORNEC%TYPE;
  v_commission FORNECEDOR.COMISSAO%TYPE;
  v_sales FORNECEDOR.VENDA%TYPE;
  
BEGIN 
   v_cod_provider:='& TYPE_THE_COD_PROVIDER';
   SELECT N_FORNEC, COMISSAO , VENDA INTO v_has_cod, v_commission , v_sales FROM fornecedor WHERE N_FORNEC = v_cod_provider;
   IF v_has_cod = v_cod_provider THEN
      SYS.DBMS_OUTPUT.PUT_LINE(' comission ' || v_commission );
      SYS.DBMS_OUTPUT.PUT_LINE(' sales ' || v_sales);
      IF v_sales > 6000 THEN
          v_commission:= (v_sales * 0.15);
          UPDATE fornecedor SET COMISSAO = v_commission WHERE N_FORNEC = v_cod_provider;
      ELSE
          v_commission:=(v_sales * 0.05);
          UPDATE fornecedor SET COMISSAO = v_commission WHERE N_FORNEC = v_cod_provider;
      END IF;
   END IF;
  SYS.DBMS_OUTPUT.PUT_LINE(' calculated commission amount' || v_commission);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
      SYS.DBMS_OUTPUT.PUT_LINE( ' FORNECEDOR NÃO INFORMADO ' );
END;





/*
Acessar a tabela “CONTA” pesquisando registro e em função do resultado da pesquisa, inserir nova linha na tabela A_FAZER.
*/
/*
Criar um bloco PL-SQL para recuperar, na tabela CONTA, 
o numero da conta com saldo 
inferior a R$ 10.000 em uma variável e caso encontre um registro, 

inserir na tabela A_FAZER uma nova tarefa nos campos abaixo:
FEITO = ‘N’
DATA = data do sistema
OBSERV = ‘Mensagem para CC nº xxxx – saldo baixo’
*/


DECLARE 
  v_data_system DATE := trunc(SYSDATE);
  CURSOR account IS SELECT  * FROM conta WHERE SALDO < 10000;
BEGIN 
      FOR column_value in account
      LOOP
          INSERT INTO A_FAZER(FEITO, DATA, OBSERV) VALUES('N', v_data_system, 'Mensagem para CC n - '|| column_value.n_conta ||' - ' ||'saldo:  '||column_value.saldo);
      END LOOP;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        SYS.DBMS_OUTPUT.PUT_LINE( ' << number account not exists >> ');
    WHEN TOO_MANY_ROWS THEN 
        SYS.DBMS_OUTPUT.PUT_LINE( '<< errors >>');        
END;
